---

- name: Install new SWI
  eos_command:
    provider: "{{ eos_provider }}"
    commands:
      - "routing-context vrf {{ management.vrf_lite | default('default') }}"
      - "install source {{ image_url }} now"

  #- debug:
  #    msg: "Will now reboot the switch. Ignore the error if any."

- name: Reboot the switch
  eos_command:
    provider: "{{ eos_provider }}"
    commands:
      - 'reload in 1 force reason "Upgrade"'
  ignore_errors: true
  no_log: true

  #- debug:
  #    msg: "Switch is now rebooting. Please wait..."

- name: Wait for the switch to come back online
  wait_for:
    host: "{{ inventory_hostname }}"
    delay: "{{ install_pause }}"
    port: 443
    timeout: "{{ reboot_timer }}"
  ignore_errors: true

- pause:
    seconds: "{{ install_pause }}"

- name: Gather show version facts
  eos_command:
    provider: "{{ eos_provider }}"
    commands:
      - command: 'show version'
        output: json
  register: showvers_post


- name: Check new EOS version
  assert:
    that:
      - "'{{ target_version }}' in showvers_post['stdout'][0]['version']"
    msg: "Upgrade failed. New version is {{ showvers_post['stdout'][0]['version'] }} instead of {{ target_version }}"

# Update banner
- name: Facts
  include_role:
    name: facts

- name: Update login banner
  eos_banner:
    provider: "{{ eos_provider }}"
    banner: login
    text: "{{ banner }}"
  when: banner is defined

- name: Update MOTD
  eos_banner:
    provider: "{{ eos_provider }}"
    banner: motd
    text: "{{ motd }}"
  when: motd is defined
